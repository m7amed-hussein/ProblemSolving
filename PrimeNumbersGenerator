#include<set>
#include<map>
#include<bits/stdc++.h>
#include<list>
#include<iomanip>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<complex>
#include<sstream>
#include<iostream>
#include<fstream>
#include<algorithm>
#include<numeric>
#include<utility>
#include<functional>
#include<stdio.h>
#include<assert.h>
#include<memory.h>
#include<bitset>
using namespace std;

#define all(v)                ((v).begin()), ((v).end())
#define sz(v)                ((int)((v).size()))
#define clr(v, d)            memset(v, d, sizeof(v))
#define rep(i, v)        for(int i=0;i<sz(v);++i)
#define lp(n)        for(int i=0;i<(int)(n);++i)
#define lpi(j, n)    for(int i=(j);i<(int)(n);++i)
#define lpd(i, j, n)    for(int i=(j);i>=(int)(n);--i)

typedef long long         ll;

const double EPS = (1e-7);
int dcmp(double x, double y) {    return fabs(x-y) <= EPS ? 0 : x < y ? -1 : 1;    }

#define pb                    push_back
#define MP                    make_pair
#define P(x)                cout<<#x<<" = { "<<x<<" }\n"
typedef long double         ld;
typedef vector<int>       vi;
typedef vector<double>    vd;
typedef vector< vi >      vvi;
typedef vector< vd >      vvd;
typedef vector<string>    vs;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }
void fast()
{
    ios_base::sync_with_stdio(false);
    cout.tie(NULL);
    cin.tie(NULL);
}


const int N = 1e7;
bool sieve[N];
vector<int>primes;
void generate() {
    memset(sieve, 1, sizeof sieve);
    sieve[0] = sieve[1] = 0;
    for (int i = 4; i < N; i += 2)
        sieve[i] = 0;
    for (ll i = 3; i * i < N; i += 2) {
        if (!sieve[i])
            continue;
        for (ll j = i * i; j < N; j += i + i)
            sieve[j] = 0;
    }
    primes.push_back(2);
    for (int i = 3; i < N; i += 2)
        if (sieve[i]) primes.push_back(i);
}




int main()
{fast();
generate();
    int t;
    cin>>t;
    while(t--){
         int n;
        cin>>n;
        int a= *lower_bound(all(primes), n+1);
        int b= *lower_bound(all(primes), a+n);
        cout<<a*b<<endl;
    }
    
    
    
    
    return 0;
}
